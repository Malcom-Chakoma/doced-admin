{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/helpers/guards/auth.guard.ts","./src/app/helpers/guards/deAuth.guard.ts","./src/app/landing/signin/signin.component.ts","./src/app/landing/signin/signin.component.html","./src/app/landing/signup/signup.component.ts","./src/app/landing/signup/signup.component.html","./src/app/layout/components/dashboard/dashboard.component.ts","./src/app/layout/components/dashboard/dashboard.component.html","./src/app/layout/components/doctors/components/view-doctors/view-doctors.component.ts","./src/app/layout/components/doctors/components/view-doctors/view-doctors.component.html","./src/app/layout/components/doctors/doctors.component.ts","./src/app/layout/components/doctors/doctors.component.html","./src/app/layout/components/institutions/components/view-institutions/view-institutions.component.ts","./src/app/layout/components/institutions/components/view-institutions/view-institutions.component.html","./src/app/layout/components/institutions/institutions.component.ts","./src/app/layout/components/institutions/institutions.component.html","./src/app/layout/components/payments/payments.component.ts","./src/app/layout/components/payments/payments.component.html","./src/app/layout/components/settings/components/hospitals/components/add-hospital/add-hospital.component.ts","./src/app/layout/components/settings/components/hospitals/components/add-hospital/add-hospital.component.html","./src/app/layout/components/settings/components/hospitals/components/view-hospital/view-hospital.component.ts","./src/app/layout/components/settings/components/hospitals/components/view-hospital/view-hospital.component.html","./src/app/layout/components/settings/components/hospitals/hospitals.component.ts","./src/app/layout/components/settings/components/hospitals/hospitals.component.html","./src/app/layout/components/settings/components/medical-aid/components/add-medical-aid/add-medical-aid.component.ts","./src/app/layout/components/settings/components/medical-aid/components/add-medical-aid/add-medical-aid.component.html","./src/app/layout/components/settings/components/medical-aid/components/view-medical-aid/view-medical-aid.component.ts","./src/app/layout/components/settings/components/medical-aid/components/view-medical-aid/view-medical-aid.component.html","./src/app/layout/components/settings/components/medical-aid/medical-aid.component.ts","./src/app/layout/components/settings/components/medical-aid/medical-aid.component.html","./src/app/layout/components/settings/components/procedures/components/add-procedure/add-procedure.component.ts","./src/app/layout/components/settings/components/procedures/components/add-procedure/add-procedure.component.html","./src/app/layout/components/settings/components/procedures/components/view-procedure/view-procedure.component.ts","./src/app/layout/components/settings/components/procedures/components/view-procedure/view-procedure.component.html","./src/app/layout/components/settings/components/procedures/procedures.component.ts","./src/app/layout/components/settings/components/procedures/procedures.component.html","./src/app/layout/components/settings/components/specialisations/components/add-specialisations/add-specialisations.component.ts","./src/app/layout/components/settings/components/specialisations/components/add-specialisations/add-specialisations.component.html","./src/app/layout/components/settings/components/specialisations/components/view-specialisations/view-specialisations.component.ts","./src/app/layout/components/settings/components/specialisations/components/view-specialisations/view-specialisations.component.html","./src/app/layout/components/settings/components/specialisations/specialisations.component.ts","./src/app/layout/components/settings/components/specialisations/specialisations.component.html","./src/app/layout/components/settings/components/subscriptions/components/add-subscription/add-subscription.component.ts","./src/app/layout/components/settings/components/subscriptions/components/add-subscription/add-subscription.component.html","./src/app/layout/components/settings/components/subscriptions/components/view-subscription/view-subscription.component.ts","./src/app/layout/components/settings/components/subscriptions/components/view-subscription/view-subscription.component.html","./src/app/layout/components/settings/components/subscriptions/subscriptions.component.ts","./src/app/layout/components/settings/components/subscriptions/subscriptions.component.html","./src/app/layout/components/settings/settings.component.ts","./src/app/layout/components/settings/settings.component.html","./src/app/layout/components/tickets/tickets.component.ts","./src/app/layout/components/tickets/tickets.component.html","./src/app/layout/components/users/components/add-user/add-user.component.ts","./src/app/layout/components/users/components/add-user/add-user.component.html","./src/app/layout/components/users/components/view-user/view-user.component.ts","./src/app/layout/components/users/components/view-user/view-user.component.html","./src/app/layout/components/users/users.component.ts","./src/app/layout/components/users/users.component.html","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/services/auth.service.ts","./src/app/services/doctors.service.ts","./src/app/services/hospital.service.ts","./src/app/services/institutions.service.ts","./src/app/services/medical-aid.service.ts","./src/app/services/notification.service.ts","./src/app/services/procedure.service.ts","./src/app/services/specialisation.service.ts","./src/app/services/subscription-plan.service.ts","./src/app/services/users.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './helpers/guards/auth.guard';\nimport { DeAuthGuard } from './helpers/guards/deAuth.guard';\nimport { SigninComponent } from './landing/signin/signin.component';\nimport { SignupComponent } from './landing/signup/signup.component';\nimport { DashboardComponent } from './layout/components/dashboard/dashboard.component';\nimport { DoctorsComponent } from './layout/components/doctors/doctors.component';\nimport { InstitutionsComponent } from './layout/components/institutions/institutions.component';\nimport { PaymentsComponent } from './layout/components/payments/payments.component';\nimport { SettingsComponent } from './layout/components/settings/settings.component';\nimport { TicketsComponent } from './layout/components/tickets/tickets.component';\nimport { UsersComponent } from './layout/components/users/users.component';\nimport { LayoutComponent } from './layout/layout.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SigninComponent,canActivate: [DeAuthGuard] },\n  { path: 'signin', component: SigninComponent, canActivate: [DeAuthGuard] },\n  { path: 'signup', component: SignupComponent, canActivate: [DeAuthGuard] },\n  {\n    path: \"layout\", component: LayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', component: DashboardComponent },\n      { path: 'dashboard', component: DashboardComponent },\n      { path: 'doctors', component: DoctorsComponent },\n      { path: 'institutions', component: InstitutionsComponent },\n      { path: 'payments', component: PaymentsComponent },\n      { path: 'settings', component: SettingsComponent },\n      { path: 'tickets', component: TicketsComponent },\n      { path: 'users', component: UsersComponent },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'klina-admin';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//angular material\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { LayoutComponent } from './layout/layout.component';\nimport { SigninComponent } from './landing/signin/signin.component';\nimport { SignupComponent } from './landing/signup/signup.component';\nimport { SubscriptionsComponent } from './layout/components/settings/components/subscriptions/subscriptions.component';\nimport { MedicalAidComponent } from './layout/components/settings/components/medical-aid/medical-aid.component';\nimport { ProceduresComponent } from './layout/components/settings/components/procedures/procedures.component';\nimport { SpecialisationsComponent } from './layout/components/settings/components/specialisations/specialisations.component';\nimport { SettingsComponent } from './layout/components/settings/settings.component';\nimport { UsersComponent } from './layout/components/users/users.component';\nimport { DoctorsComponent } from './layout/components/doctors/doctors.component';\nimport { InstitutionsComponent } from './layout/components/institutions/institutions.component';\nimport { PaymentsComponent } from './layout/components/payments/payments.component';\nimport { DashboardComponent } from './layout/components/dashboard/dashboard.component';\nimport { TicketsComponent } from './layout/components/tickets/tickets.component';\nimport { AddSubscriptionComponent } from './layout/components/settings/components/subscriptions/components/add-subscription/add-subscription.component';\nimport { ViewSubscriptionComponent } from './layout/components/settings/components/subscriptions/components/view-subscription/view-subscription.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { AddMedicalAidComponent } from './layout/components/settings/components/medical-aid/components/add-medical-aid/add-medical-aid.component';\nimport { ViewMedicalAidComponent } from './layout/components/settings/components/medical-aid/components/view-medical-aid/view-medical-aid.component';\nimport { AddSpecialisationsComponent } from './layout/components/settings/components/specialisations/components/add-specialisations/add-specialisations.component';\nimport { ViewSpecialisationsComponent } from './layout/components/settings/components/specialisations/components/view-specialisations/view-specialisations.component';\nimport { AddProcedureComponent } from './layout/components/settings/components/procedures/components/add-procedure/add-procedure.component';\nimport { ViewProcedureComponent } from './layout/components/settings/components/procedures/components/view-procedure/view-procedure.component';\nimport { AddUserComponent } from './layout/components/users/components/add-user/add-user.component';\nimport { ViewUserComponent } from './layout/components/users/components/view-user/view-user.component';\nimport { HospitalsComponent } from './layout/components/settings/components/hospitals/hospitals.component';\nimport { AddHospitalComponent } from './layout/components/settings/components/hospitals/components/add-hospital/add-hospital.component';\nimport { ViewHospitalComponent } from './layout/components/settings/components/hospitals/components/view-hospital/view-hospital.component';\nimport { ViewDoctorsComponent } from './layout/components/doctors/components/view-doctors/view-doctors.component';\nimport { ViewInstitutionsComponent } from './layout/components/institutions/components/view-institutions/view-institutions.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    SigninComponent,\n    SignupComponent,\n    SubscriptionsComponent,\n    MedicalAidComponent,\n    ProceduresComponent,\n    SpecialisationsComponent,\n    SettingsComponent,\n    UsersComponent,\n    DoctorsComponent,\n    InstitutionsComponent,\n    PaymentsComponent,\n    DashboardComponent,\n    TicketsComponent,\n    AddSubscriptionComponent,\n    ViewSubscriptionComponent,\n    AddMedicalAidComponent,\n    ViewMedicalAidComponent,\n    AddSpecialisationsComponent,\n    ViewSpecialisationsComponent,\n    AddProcedureComponent,\n    ViewProcedureComponent,\n    AddUserComponent,\n    ViewUserComponent,\n    HospitalsComponent,\n    AddHospitalComponent,\n    ViewHospitalComponent,\n    ViewDoctorsComponent,\n    ViewInstitutionsComponent,\n       \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatInputModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n    LayoutModule,\n    MatSidenavModule,\n    MatListModule,\n  ],\n  providers: [ ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree> {\n\n      \n    if (this.authService.SessionUser) return true;\n\n    this.router.navigateByUrl('/signin');\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './../../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeAuthGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):boolean \n  {\n    if (this.authService.SessionUser) {\n      this.router.navigateByUrl('/layout');\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {AuthService} from './../../services/auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n  form:FormGroup\n  constructor(private fb:FormBuilder, private authService:AuthService) { }\n\n  ngOnInit(): void {\n\n    this.form = this.fb.group({\n      email:['',[Validators.required,Validators.email]],\n      password:['',[Validators.required]]\n    })\n  }\n\n  onSubmit(){\n    this.authService.signIn(this.form.value)\n  }\n\n}\n","<div class=\"container\">\n\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n        <div>\n            <h1>DocEd</h1>\n            <p>Login</p>\n        </div>\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input matInput formControlName=\"email\" placeholder=\"placeHolder\" />\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" placeholder=\"placeHolder\" />\n            </mat-form-field>\n        </div>\n        <div>\n            <button mat-stroked-button type=\"submit\" [disabled]=\"form.invalid\">\n                Sign in\n            </button>\n        </div>\n    </form>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>signup works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DoctorsService } from 'src/app/services/doctors.service';\nimport { InstitutionsService } from 'src/app/services/institutions.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  doctors = []\n  institutions = []\n  constructor(\n    private dialog: MatDialog,\n    private doctorsService: DoctorsService,\n    private institutionsService: InstitutionsService\n  ) {\n    doctorsService.users$.subscribe((doctors)=>{\n      this.doctors = doctors;\n    \n    institutionsService.institutions$.subscribe((institutions)=>{\n      this.institutions = institutions\n    })\n    })\n\n  }\n\n  ngOnInit(): void {}\n}\n","<router-outlet></router-outlet>\n<section class=\"cards\">\n  <mat-card>\n    <h1><strong>{{doctors?.length}}</strong></h1>\n    Doctors\n    <mat-card-actions>\n      <button mat-icon-button>\n        <mat-icon [routerLink]=\"['/layout/doctors']\" routerLinkActive=\"router-link-active\" >visibility</mat-icon>view doctors\n      </button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card>\n    <h1><strong>{{institutions?.length}}</strong></h1>\n    Institutions\n    <mat-card-actions>\n      <button mat-icon-button >\n        <mat-icon [routerLink]=\"['/layout/institutions']\" routerLinkActive=\"router-link-active\" >visibility</mat-icon>Institutions List\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view-doctors',\n  templateUrl: './view-doctors.component.html',\n  styleUrls: ['./view-doctors.component.scss']\n})\nexport class ViewDoctorsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>view-doctors works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {DoctorsService} from './../../../services/doctors.service'\nimport { ViewDoctorsComponent } from './components/view-doctors/view-doctors.component';\n\n@Component({\n  selector: 'app-doctors',\n  templateUrl: './doctors.component.html',\n  styleUrls: ['./doctors.component.scss']\n})\nexport class DoctorsComponent implements OnInit {\ndataSource:MatTableDataSource<unknown>;\ndisplayedColumns = ['title','first_name','last_name','email','actions']\n  constructor(private dialog:MatDialog,private doctorsService:DoctorsService) { \n    doctorsService.users$.subscribe((users)=>(\n      this.dataSource = new MatTableDataSource(users)\n    ))\n  }\n\n  ngOnInit(): void {\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  viewDoctors(){\n    this.dialog.open(ViewDoctorsComponent,{\n      width:\"40%\"\n    })\n  }\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Search Doctors\"\n      #input\n    />\n  </mat-form-field>\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"title\">\n      <mat-header-cell *matHeaderCellDef> Title </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.title }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"first_name\">\n      <mat-header-cell *matHeaderCellDef> First Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.first_name }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"last_name\">\n      <mat-header-cell *matHeaderCellDef> Last Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.last_name }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell *matHeaderCellDef> Email</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.email }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button mat-icon-button (click) = viewDoctors()>\n            <mat-icon>visibility</mat-icon>\n        </button>\n        </mat-cell>\n      </ng-container>\n    \n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view-institutions',\n  templateUrl: './view-institutions.component.html',\n  styleUrls: ['./view-institutions.component.scss']\n})\nexport class ViewInstitutionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>view-institutions works!</p>\n","import { DataSource } from '@angular/cdk/collections';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { InstitutionsService } from './../../../services/institutions.service';\nimport { ViewInstitutionsComponent } from './components/view-institutions/view-institutions.component';\n\n@Component({\n  selector: 'app-institutions',\n  templateUrl: './institutions.component.html',\n  styleUrls: ['./institutions.component.scss'],\n})\nexport class InstitutionsComponent implements OnInit {\n  dataSource: MatTableDataSource<unknown>;\n  displayedColumns = ['name', 'type', 'head_office', 'locations','actions'];\n  constructor(\n    private dialog: MatDialog,\n    private institutionsService: InstitutionsService\n  ) {\n    institutionsService.institutions$.subscribe(\n      (institutions) => (this.dataSource = new MatTableDataSource(institutions))\n    );\n  }\n\n  ngOnInit(): void {}\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  viewInstitutions(){\n    this.dialog.open(ViewInstitutionsComponent,{\n      width:\"40%\"\n    })\n  }\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Search Institutions\"\n      #input\n    />\n  </mat-form-field>\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Institution Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.name }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n      <mat-header-cell *matHeaderCellDef> Type</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.type }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"head_office\">\n      <mat-header-cell *matHeaderCellDef> Head Office</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.head_office }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"locations\">\n      <mat-header-cell *matHeaderCellDef> Locations</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.locations }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button (click) = viewInstitutions()>\n          <mat-icon>visibility</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss']\n})\nexport class PaymentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>payments works!</p>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HospitalService } from 'src/app/services/hospital.service';\n// import * as countries from \"./../../../../../../../../assets/datasets/zimbabwe.json\"\n\n@Component({\n  selector: 'app-add-hospital',\n  templateUrl: './add-hospital.component.html',\n  styleUrls: ['./add-hospital.component.scss']\n})\nexport class AddHospitalComponent implements OnInit {\n  form:FormGroup\n  cities =[] //(countries as any).default;\n  filtered_cities = this.cities;\n  constructor(private fb:FormBuilder, private http:HttpClient, private hospitalService:HospitalService) {\n    this.getCities()\n   }\n  \n  ngOnInit(): void {\n    this.form = this.fb.group({\n      name:['',[Validators.required]],\n      city:['',Validators.required],\n      country:['']\n    })\n  }\n  filterOptions(value:string){\n     if(value){\n       this.filtered_cities = this.cities.filter((city:any)=>{\n        return city.name.toLocaleLowerCase().match(value.toLocaleLowerCase())\n     \n       })\n     }\n     else{\n       this.filtered_cities = this.cities\n     }\n   \n   }\n\n    getCities(){\n     this.http.get(\"./../../../../../../../../assets/datasets/zimbabwe.json\").subscribe((cities:any)=>{\n      this.cities =cities\n      this.filtered_cities = cities\n     })\n   }\n\n   addCounty(value:any){\n    let city:any = this.cities.filter((c)=>{ return c.name === value})[0]\n    this.form.get('country').setValue(city.country)\n   }\n\n   onSubmit(){\n     this.hospitalService.addHospital(this.form.value)\n   }\n\n}\n","<h1 mat-header>\nAdd Hospital\n</h1>\n<mat-dialog-content>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"name\" placeholder=\"placeHolder\">\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Select City</mat-label>\n                <mat-select formControlName=\"city\" (selectionChange)=\"addCounty($event.value)\">\n                    <div class=\"mat-select-search\">\n                        <input matInput type=\"search\" placeholder=\"Search and select city\"\n                            (keyup)=\"filterOptions($event.target.value)\" />\n                    </div>\n                    <mat-option *ngFor=\"let city of filtered_cities\" [value]=\"city.name\">\n                        {{ city.name }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div>\n            <h3>{{ form.get('country').value }}</h3>\n        </div>\n        <div>\n            <button mat-stroked-button type=\"submit\" [disabled]=\"form.invalid\"> Save</button>\n        </div>\n    </form>\n</mat-dialog-content>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Hospital } from 'src/app/models/hospital.model';\nimport { HospitalService } from 'src/app/services/hospital.service';\n\n@Component({\n  selector: 'app-view-hospital',\n  templateUrl: './view-hospital.component.html',\n  styleUrls: ['./view-hospital.component.scss']\n})\nexport class ViewHospitalComponent implements OnInit {\n\n  form:FormGroup\n  cities =[] //(countries as any).default;\n  filtered_cities = this.cities;\n  constructor(private fb:FormBuilder, private http:HttpClient, private hospitalService:HospitalService,@Inject(MAT_DIALOG_DATA) public data:Hospital) {\n    this.getCities()\n   }\n  \n  ngOnInit(): void {\n    this.form = this.fb.group({\n      name:[this.data.name,[Validators.required]],\n      city:[this.data.city,Validators.required],\n      country:[this.data.country]\n    })\n    this.form.disable()\n  }\n  filterOptions(value:string){\n     if(value){\n       this.filtered_cities = this.cities.filter((city:any)=>{\n        return city.name.toLocaleLowerCase().match(value.toLocaleLowerCase())\n     \n       })\n     }\n     else{\n       this.filtered_cities = this.cities\n     }\n   \n   }\n\n    getCities(){\n     this.http.get(\"./../../../../../../../../assets/datasets/zimbabwe.json\").subscribe((cities:any)=>{\n      this.cities =cities\n      this.filtered_cities = cities\n     })\n   }\n\n   addCounty(value:any){\n    let city:any = this.cities.filter((c)=>{ return c.name === value})[0]\n    this.form.get('country').setValue(city.country)\n   }\n\n   onSubmit(){\n     this.hospitalService.updateHospital(this.data._id,this.form.value)\n   }\n\n}\n","<h1 mat-header>\n    Add Hospital  <mat-icon (click)=\"form.enable()\" *ngIf=\"form.disabled\">edit</mat-icon>\n    </h1>\n    <mat-dialog-content>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n            <div>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" placeholder=\"placeHolder\">\n                </mat-form-field>\n            </div>\n            <div>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Select City</mat-label>\n                    <mat-select formControlName=\"city\" (selectionChange)=\"addCounty($event.value)\">\n                        <div class=\"mat-select-search\">\n                            <input matInput type=\"search\" placeholder=\"Search and select city\"\n                                (keyup)=\"filterOptions($event.target.value)\" />\n                        </div>\n                        <mat-option *ngFor=\"let city of filtered_cities\" [value]=\"city.name\">\n                            {{ city.name }}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div>\n                <h3>{{ form.get('country').value }}</h3>\n            </div>\n            <div *ngIf=\"form.enabled\">\n                <button mat-stroked-button type=\"submit\" [diabled]=\"form.invalid\"> Save</button>\n            </div>\n        </form>\n    </mat-dialog-content>\n    ","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { HospitalService } from 'src/app/services/hospital.service';\nimport { ViewUserComponent } from '../../../users/components/view-user/view-user.component';\nimport { AddHospitalComponent } from './components/add-hospital/add-hospital.component';\nimport { ViewHospitalComponent } from './components/view-hospital/view-hospital.component';\n\n@Component({\n  selector: 'app-hospitals',\n  templateUrl: './hospitals.component.html',\n  styleUrls: ['./hospitals.component.scss'],\n})\nexport class HospitalsComponent implements OnInit {\n  displayedColumns = ['name', 'city', 'country', 'actions'];\n  dataSource: MatTableDataSource<unknown>;\n  constructor(\n    private dialog: MatDialog,\n    private hospitalService: HospitalService\n  ) {\n    hospitalService.hospitals$.subscribe((hospitals) => {\n      this.dataSource = new MatTableDataSource(hospitals);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addHospital() {\n    this.dialog.open(AddHospitalComponent, {\n      width: '40%',\n    });\n  }\n\n  viewHospital(value: any) {\n    this.dialog.open(ViewHospitalComponent, {\n      width: '40%',\n      data: value,\n    });\n  }\n\n  deleteHospital(id:string){\n    this.hospitalService.deleteHospital(id)\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Search Hospitals\"\n      #input\n    />\n  </mat-form-field>\n  <button mat-stroked-button (click)=\"addHospital()\">\n    <mat-icon>add</mat-icon> Hospitals\n  </button>\n</div>\n\n<div>\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.name }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"city\">\n      <mat-header-cell *matHeaderCellDef> City</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.city }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"country\">\n      <mat-header-cell *matHeaderCellDef> Country</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.country }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button (click)=\"viewHospital(element)\">\n          <mat-icon>visibility</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"deleteHospital(element._id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {MedicalAidService} from './../../../../../../../services/medical-aid.service'\n\n@Component({\n  selector: 'app-add-medical-aid',\n  templateUrl: './add-medical-aid.component.html',\n  styleUrls: ['./add-medical-aid.component.scss']\n})\nexport class AddMedicalAidComponent implements OnInit {\n  form:FormGroup\n  constructor(private fb:FormBuilder,private medicalAidService:MedicalAidService) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      medical_aid_name:['',[Validators.required]],\n      status:['',[Validators.required]],\n    })\n  }\n\n  onSubmit(){\n    this.medicalAidService.addMedicalAid(this.form.value)\n  }\n\n}\n","<h1 mat-header>Add Medical Aid</h1>\n<mat-dialog-content>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Name</mat-label>\n        <input\n          matInput\n          formControlName=\"medical_aid_name\"\n          placeholder=\"placeHolder\"\n        />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Status</mat-label>\n        <mat-select formControlName=\"status\">\n          <mat-option\n            *ngFor=\"let status of ['active', 'inactive']\"\n            [value]=\"status\"\n          >\n            {{ status }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div>\n      <button mat-stroked-button type=\"submit\" [disabled]=\"form.invalid\">\n        Save\n      </button>\n    </div>\n  </form>\n</mat-dialog-content>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MedicalAidService } from 'src/app/services/medical-aid.service';\nimport {MedicalAid} from './../../../../../../../models/medical-aid.model'\n\n@Component({\n  selector: 'app-view-medical-aid',\n  templateUrl: './view-medical-aid.component.html',\n  styleUrls: ['./view-medical-aid.component.scss']\n})\nexport class ViewMedicalAidComponent implements OnInit {\n  form:FormGroup\n  constructor(private fb:FormBuilder,@Inject(MAT_DIALOG_DATA) public data:MedicalAid, private medicalAidService:MedicalAidService) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      medical_aid_name:[this.data.medical_aid_name,[Validators.required]],\n      status:[this.data.status,[Validators.required]],\n    })\n    this.form.disable()\n  }\n\n  onSubmit(){\n\n    this.medicalAidService.updateMedicalAid(this.data._id, this.form.value)\n\n  }\n\n}\n","<h1 mat-header>Add Medical Aid     <mat-icon *ngIf=\"form.disabled\" (click)=\"form.enable()\">edit</mat-icon></h1>\n<mat-dialog-content>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Name</mat-label>\n        <input\n          matInput\n          formControlName=\"medical_aid_name\"\n          placeholder=\"placeHolder\"\n        />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Status</mat-label>\n        <mat-select formControlName=\"status\">\n          <mat-option\n            *ngFor=\"let status of ['active', 'inactive']\"\n            [value]=\"status\"\n          >\n            {{ status }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div>\n      <button mat-stroked-button type=\"submit\"  *ngIf=\"form.enabled\" [disabled]=\"form.invalid\">\n        Save\n      </button>\n    </div>\n  </form>\n</mat-dialog-content>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MedicalAid } from 'src/app/models/medical-aid.model';\nimport { MedicalAidService } from 'src/app/services/medical-aid.service';\nimport { AddMedicalAidComponent } from './components/add-medical-aid/add-medical-aid.component';\nimport { ViewMedicalAidComponent } from './components/view-medical-aid/view-medical-aid.component';\n\n@Component({\n  selector: 'app-medical-aid',\n  templateUrl: './medical-aid.component.html',\n  styleUrls: ['./medical-aid.component.scss'],\n})\nexport class MedicalAidComponent implements OnInit {\n  dataSource: MatTableDataSource<unknown>;\n  displayedColumns = ['name', 'status', 'actions'];\n  constructor(\n    private dialog: MatDialog,\n    private medicalAidService: MedicalAidService\n  ) {\n    medicalAidService.medical_aids$.subscribe(\n      (medical_aids) => (this.dataSource = new MatTableDataSource(medical_aids))\n    );\n  }\n\n  ngOnInit(): void {}\n\n  addMedicalAid() {\n    this.dialog.open(AddMedicalAidComponent, {\n      width: '30%',\n    });\n  }\n\n  viewMedicalAid(value: any) {\n    this.dialog.open(ViewMedicalAidComponent, { width: '30%', data: value });\n  }\n  deleteMedicalAid(id) {\n    this.medicalAidService.deleteMedicalAid(id);\n  }\n  activateDeactivate(value: MedicalAid) {\n    let status = 'active';\n    if (value.status === 'active') status = 'inactive';\n    this.medicalAidService.updateMedicalAid(value._id, { status: status });\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Search Medical-Aid\"\n      #input\n    />\n  </mat-form-field>\n  <button mat-stroked-button (click)=\"addMedicalAid()\">\n    <mat-icon>add</mat-icon> medical-aid\n  </button>\n</div>\n\n<div>\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Medical Aid </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{ element.medical_aid_name }}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <mat-header-cell *matHeaderCellDef> Status</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.status }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button (click)=\"viewMedicalAid(element)\">\n          <mat-icon>visibility</mat-icon>\n        </button>\n        <button mat-stroked-button (click)=\"activateDeactivate(element)\">\n          {{ element.status === \"inactive\" ? \"activate\" : \"deactivate\" }}\n        </button>\n        <button mat-icon-button (click)=\"deleteMedicalAid(element._id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    a-md-data-table-column\n    <!-- press ctrl + space to add more column snippet or delete this line -->\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {ProcedureService} from './../../../../../../../services/procedure.service'\n\n@Component({\n  selector: 'app-add-procedure',\n  templateUrl: './add-procedure.component.html',\n  styleUrls: ['./add-procedure.component.scss']\n})\nexport class AddProcedureComponent implements OnInit {\n  \n  form:FormGroup\n  constructor(private fb:FormBuilder, private procedureService:ProcedureService) {\n\n    \n   }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      procedure_name:['',[Validators.required]],\n      type:['',[Validators.required]],\n      status:['',[Validators.required]]\n    })\n  }\n  onSubmit(){\n    this.procedureService.addProcedure(this.form.value)\n\n  }\n\n}\n","<h1 mat-header>Add Procedure</h1>\n<mat-dialog-content>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"procedure_name\" placeholder=\"placeholder\">\n            </mat-form-field>\n        </div>\n\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Type</mat-label>\n                <mat-select formControlName=\"type\">\n                    <mat-option *ngFor=\"let procedure_type of ['minor', 'intermediate','major']\" [value]=\"procedure_type\">\n                        {{ procedure_type }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Status</mat-label>\n                <mat-select formControlName=\"status\">\n                    <mat-option *ngFor=\"let status of ['active', 'inactive']\" [value]=\"status\">\n                        {{ status }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div>\n            <button mat-stroked-button type=\"submit\" [disabled]=\"form.invalid\">Save</button>\n        </div>\n    </form>\n</mat-dialog-content>","import { Component, Inject, Injectable, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { ProcedureService } from 'src/app/services/procedure.service';\n\n@Component({\n  selector: 'app-view-procedure',\n  templateUrl: './view-procedure.component.html',\n  styleUrls: ['./view-procedure.component.scss']\n})\nexport class ViewProcedureComponent implements OnInit {\n\n  form:FormGroup\n  constructor(private fb:FormBuilder, private procedureService:ProcedureService, @Inject(MAT_DIALOG_DATA) public data:Procedure) {\n\n    \n   }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      procedure_name:[this.data.procedure_name,[Validators.required]],\n      type:[this.data.type,[Validators.required]],\n      status:[this.data.status,[Validators.required]]\n    })\n    this.form.disable()\n  }\n  onSubmit(){\n    this.procedureService.updateProcedure(this.data._id,this.form.value)\n\n  }\n\n}\n","<h1 mat-header>Procedure   <mat-icon (click)=\"form.enable()\" *ngIf=\"form.disabled\">edit</mat-icon></h1>\n<mat-dialog-content>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"procedure_name\" placeholder=\"placeholder\">\n            </mat-form-field>\n        </div>\n\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Type</mat-label>\n                <mat-select formControlName=\"type\">\n                    <mat-option *ngFor=\"let procedure_type of ['minor', 'intermediate','major']\" [value]=\"procedure_type\">\n                        {{ procedure_type }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Status</mat-label>\n                <mat-select formControlName=\"status\">\n                    <mat-option *ngFor=\"let status of ['active', 'inactive']\" [value]=\"status\">\n                        {{ status }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div *ngIf=\"form.enabled\">\n            <button mat-stroked-button type=\"submit\" [disabled]=\"form.invalid\">Save</button>\n        </div>\n    </form>\n</mat-dialog-content>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ProcedureService } from 'src/app/services/procedure.service';\nimport { AddProcedureComponent } from './components/add-procedure/add-procedure.component';\nimport { ViewProcedureComponent } from './components/view-procedure/view-procedure.component';\n\n@Component({\n  selector: 'app-procedures',\n  templateUrl: './procedures.component.html',\n  styleUrls: ['./procedures.component.scss']\n})\nexport class ProceduresComponent implements OnInit {\ndataSource;\ndisplayedColumns=['name','type','status','actions']\n  constructor(private dialog:MatDialog,private procedureServece:ProcedureService) {\n\n    procedureServece.procedures$.subscribe((res)=>{\n      this.dataSource = new MatTableDataSource(res)\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  addProcedure(){\n  this.dialog.open(AddProcedureComponent,{\n    width:\"40%\"\n  })\n  }\n\n\n  viewProcedure(procedure){\n    this.dialog.open(ViewProcedureComponent,{\n      width:\"40%\",\n      data:procedure\n    })\n  }\n  deleteProcedure(id){\n    this.procedureServece.deleteProcedure(id)\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Search Procedures\"\n      #input\n    />\n  </mat-form-field>\n  <button mat-stroked-button (click)=\"addProcedure()\">\n    <mat-icon> add </mat-icon>\n    procedure\n  </button>\n</div>\n\n<div>\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{ element.procedure_name }}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n      <mat-header-cell *matHeaderCellDef> Type</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.type }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <mat-header-cell *matHeaderCellDef> Status</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.status }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button (click)=\"viewProcedure(element)\">\n          <mat-icon>visibility</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"deleteProcedure(element._id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { ProcedureService } from 'src/app/services/procedure.service';\nimport { SpecialisationService } from 'src/app/services/specialisation.service';\n\n@Component({\n  selector: 'app-add-specialisations',\n  templateUrl: './add-specialisations.component.html',\n  styleUrls: ['./add-specialisations.component.scss']\n})\nexport class AddSpecialisationsComponent implements OnInit {\n   form:FormGroup\n  procedures = [];\n  filtered_procedures = [];\n  constructor(private fb:FormBuilder,private specialisationService:SpecialisationService, private procedureService:ProcedureService) { \n    procedureService.procedures$.subscribe((procedures)=>{\n      this.procedures = procedures\n      this.filtered_procedures = procedures\n    })\n  }\n\n  ngOnInit(): void {\n\n    this.form = this.fb.group({\n      specialisation_name:['',[Validators.required]],\n      procedures:['',[Validators.required]]\n    })\n  }\n\n  filterOptions(value:string){\n   console.log(value)\n    if(value){\n      this.filtered_procedures = this.procedures.filter((procedure:Procedure)=>{\n       return procedure.procedure_name.toLocaleLowerCase().match(value.toLocaleLowerCase())\n    \n      })\n    }\n    else{\n      this.filtered_procedures = this.procedures\n    }\n  \n  }\n  onSubmit(){\n    this.specialisationService.addSpecialisation(this.form.value)\n  }\n\n\n\n}\n","<h1 mat-header>Add Specialisation</h1>\n<mat-dialog-content>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"specialisation_name\" placeholder=\"placeholder\" />\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Select Procedures</mat-label>\n                <mat-select formControlName=\"procedures\" multiple>\n                    <div class=\"mat-select-search\">\n                        <input matInput type=\"search\" placeholder=\"Search and select procedures\"\n                            (keyup)=\"filterOptions($event.target.value)\" />\n                    </div>\n                    <mat-option *ngFor=\"let procedure of filtered_procedures\" [value]=\"procedure.procedure_name\">\n                        {{ procedure.procedure_name }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div>\n            <button mat-stroked-button type=\"submit\" [disabled]=\"form.invalid\">Save</button>\n        </div>\n    </form>\n</mat-dialog-content>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Procedure } from 'src/app/models/procedure.model';\nimport { ProcedureService } from 'src/app/services/procedure.service';\nimport { SpecialisationService } from 'src/app/services/specialisation.service';\nimport {Specialisation} from './../../../../../../../models/specialisation.model';\n@Component({\n  selector: 'app-view-specialisations',\n  templateUrl: './view-specialisations.component.html',\n  styleUrls: ['./view-specialisations.component.scss']\n})\nexport class ViewSpecialisationsComponent implements OnInit {\n\n  form:FormGroup\n  procedures = [];\n  filtered_procedures = [];\n  constructor(private fb:FormBuilder,private specialisationService:SpecialisationService, private procedureService:ProcedureService, @Inject(MAT_DIALOG_DATA) public data:Specialisation) { \n    procedureService.procedures$.subscribe((procedures)=>{\n      this.procedures = procedures\n      this.filtered_procedures = procedures\n    })\n  }\n\n  ngOnInit(): void {\n\n    this.form = this.fb.group({\n      specialisation_name:[this.data.specialisation_name,[Validators.required]],\n      procedures:[this.data.procedures,[Validators.required]]\n    })\n    this.form.disable()\n  }\n\n  filterOptions(value:string){\n   console.log(value)\n    if(value){\n      this.filtered_procedures = this.procedures.filter((procedure:Procedure)=>{\n       return procedure.procedure_name.toLocaleLowerCase().match(value.toLocaleLowerCase())\n    \n      })\n    }\n    else{\n      this.filtered_procedures = this.procedures\n    }\n  \n  }\n  onSubmit(){\n    this.specialisationService.updateSpecialisation(this.data._id,this.form.value)\n  }\n\n\n}\n","<h1 mat-header>Add Specialisation <mat-icon *ngIf=\"form.disabled\" (click)=\"form.enable()\">edit</mat-icon></h1>\n<mat-dialog-content>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"specialisation_name\" placeholder=\"placeholder\" />\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Select Procedures</mat-label>\n                <mat-select formControlName=\"procedures\" multiple>\n                    <div class=\"mat-select-search\">\n                        <input matInput type=\"search\" placeholder=\"Search and select procedures\"\n                            (keyup)=\"filterOptions($event.target.value)\" />\n                    </div>\n                    <mat-option *ngFor=\"let procedure of filtered_procedures\" [value]=\"procedure.procedure_name\">\n                        {{ procedure.procedure_name }}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div *ngIf=\"form.enabled\">\n            <button mat-stroked-button type=\"submit\" [disabled]=\"form.invalid\">Save</button>\n        </div>\n    </form>\n</mat-dialog-content>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SpecialisationService } from 'src/app/services/specialisation.service';\nimport { AddSpecialisationsComponent } from './components/add-specialisations/add-specialisations.component';\nimport { ViewSpecialisationsComponent } from './components/view-specialisations/view-specialisations.component';\n\n@Component({\n  selector: 'app-specialisations',\n  templateUrl: './specialisations.component.html',\n  styleUrls: ['./specialisations.component.scss'],\n})\nexport class SpecialisationsComponent implements OnInit {\n  displayedColumns = ['name', 'procedures', 'actions'];\n  dataSource: MatTableDataSource<unknown>;\n  constructor(\n    private specialisationService: SpecialisationService,\n    private dialog: MatDialog\n  ) {\n    specialisationService.specialisations$.subscribe((res) => {\n      this.dataSource = new MatTableDataSource(res);\n      console.log(res);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addSpecialisation() {\n    this.dialog.open(AddSpecialisationsComponent, {\n      width: '40%',\n    });\n  }\n\n  viewSpecialisation(specialisation) {\n    this.dialog.open(ViewSpecialisationsComponent, {\n      width: '40%',\n      data: specialisation,\n    });\n  }\n\n  deleteSpecialisation(id) {\n    this.specialisationService.deleteSpecialisation(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Search Specialisations\"\n      #input\n    />\n  </mat-form-field>\n  <button mat-stroked-button (click)=\"addSpecialisation()\">\n    <mat-icon>add</mat-icon>\n    specialisation\n  </button>\n</div>\n<div>\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{ element.specialisation_name }}\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"procedures\">\n      <mat-header-cell *matHeaderCellDef> Procedures </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <span *ngFor=\"let procedure of element.procedures\">\n          {{ procedure }},\n        </span>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button (click)=\"viewSpecialisation(element)\">\n          <mat-icon>visibility</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"deleteSpecialisation(element._id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <!-- press ctrl + space to add more column snippet or delete this line -->\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {SubscriptionPlanService} from './../../../../../../../services/subscription-plan.service'\n@Component({\n  selector: 'app-add-subscription',\n  templateUrl: './add-subscription.component.html',\n  styleUrls: ['./add-subscription.component.scss'],\n})\nexport class AddSubscriptionComponent implements OnInit {\n  form: FormGroup;\n  constructor(private fb: FormBuilder, private plan:SubscriptionPlanService) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      name: ['', [Validators.required]],\n      for: ['', [Validators.required]], // recommended for\n      amount_per_month: ['', [Validators.required]], // money\n      amount_per_year: ['', [Validators.required]], // money\n      features: this.fb.group({\n        patients: this.fb.group({\n          count: ['', [Validators.required]],\n          unlimited: [false, [Validators.required]],\n        }),\n        doctors: this.fb.group({\n          count: ['', [Validators.required]],\n          unlimited: [false, [Validators.required]],\n        }),\n        admins: this.fb.group({\n          count: ['', [Validators.required]],\n          unlimited: [false, [Validators.required]],\n        }),\n        files: this.fb.group({\n          count: ['', [Validators.required]],\n          unlimited: [false, [Validators.required]],\n        }),\n        notes: this.fb.group({ available: [false, [Validators.required]] }),\n        payments: this.fb.group({ available: [false, [Validators.required]] }),\n        schedules: this.fb.group({ available: [false, [Validators.required]] }),\n        reminders: this.fb.group({ available: [false, [Validators.required]] }),\n        analytics: this.fb.group({ available: [false, [Validators.required]] }),\n      }),\n    });\n  }\n\n  onSubmit() {\n\n    this.plan.addPlan(this.form.value)\n\n  }\n}\n","<h1 mat-header>Add Subscription</h1>\n<div>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n    <div>\n      <div>\n        <mat-form-field appearance=\"outline\" style=\"width: 45%; margin-right: 10%\">\n          <mat-label>Name</mat-label>\n          <input matInput formControlName=\"name\" type=\"text\" />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" style=\"width: 45%\">\n          <mat-label>Select Plan</mat-label>\n          <mat-select formControlName=\"for\">\n            <mat-option *ngFor=\"let item of ['Free', 'Basic', 'Premium']\" [value]=\"item\">{{ item }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"outline\" style=\"width: 45%; margin-right: 10%\">\n          <mat-label>Monthly Payments</mat-label>\n          <input matInput formControlName=\"amount_per_month\" type=\"text\" />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" style=\"width: 45%\">\n          <mat-label>Annual Payments</mat-label>\n          <input matInput formControlName=\"amount_per_year\" type=\"text\" />\n        </mat-form-field>\n      </div>\n    </div>\n\n    <!-- features start here -->\n    <div formGroupName=\"features\">\n      <div>\n        <div formGroupName=\"patients\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Patients</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>count</mat-label>\n              <input formControlName=\"count\" matInput type=\"number\" />\n            </mat-form-field>\n            <mat-checkbox formControlName=\"unlimited\">Unlimited</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"doctors\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Doctors</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>count</mat-label>\n              <input formControlName=\"count\" matInput type=\"number\" />\n            </mat-form-field>\n            <mat-checkbox formControlName=\"unlimited\">Unlimited</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"admins\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Admins</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>count</mat-label>\n              <input formControlName=\"count\" matInput type=\"number\" />\n            </mat-form-field>\n            <mat-checkbox formControlName=\"unlimited\">Unlimited</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"files\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Files</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>count</mat-label>\n              <input formControlName=\"count\" matInput type=\"number\" />\n            </mat-form-field>\n            <mat-checkbox formControlName=\"unlimited\">Unlimited</mat-checkbox>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div formGroupName=\"notes\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Notes</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"payments\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Payments</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"schedules\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Schedules</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"reminders\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Reminders</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n        <div formGroupName=\"analytics\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Analytics</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div>\n      <button mat-stroked-button [disabled]=\"form.invalid\">Save</button>\n    </div>\n  </form>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SubscriptionPlanService } from 'src/app/services/subscription-plan.service';\nimport {Plan} from './../../../../../../../models/plan.model'\n\n@Component({\n  selector: 'app-view-subscription',\n  templateUrl: './view-subscription.component.html',\n  styleUrls: ['./view-subscription.component.scss']\n})\nexport class ViewSubscriptionComponent implements OnInit {\n  form: FormGroup;\n  constructor(private fb: FormBuilder, private plan:SubscriptionPlanService,@Inject(MAT_DIALOG_DATA) public data:Plan) { }\n\n\n  ngOnInit(): void {\n    const {features} = this.data\n    this.form = this.fb.group({\n      name: [this.data.name, [Validators.required]],\n      for: [this.data.for, [Validators.required]], // recommended for\n      amount_per_month: [this.data.amount_per_month, [Validators.required]], // money\n      amount_per_year: [this.data.amount_per_year, [Validators.required]], // money\n      features: this.fb.group({\n        patients: this.fb.group({\n          count: [features.patients.count, [Validators.required]],\n          unlimited: [features.patients.unlimited, [Validators.required]],\n        }),\n        doctors: this.fb.group({\n          count: [features.doctors.count, [Validators.required]],\n          unlimited: [features.doctors.unlimited, [Validators.required]],\n        }),\n        admins: this.fb.group({\n          count: [features.admins.count, [Validators.required]],\n          unlimited: [features.admins.unlimited, [Validators.required]],\n        }),\n        files: this.fb.group({\n          count: [features.files.count, [Validators.required]],\n          unlimited: [features.files.unlimited, [Validators.required]],\n        }),\n        notes: this.fb.group({ available: [features.notes.available, [Validators.required]] }),\n        payments: this.fb.group({ available: [features.payments.available, [Validators.required]] }),\n        schedules: this.fb.group({ available: [features.schedules.available, [Validators.required]] }),\n        reminders: this.fb.group({ available: [features.reminders.available, [Validators.required]] }),\n        analytics: this.fb.group({ available: [features.analytics.available, [Validators.required]] }),\n      }),\n    });\n    this.form.disable()\n  }\n\n  onSubmit() {\n\n    this.plan.updatePlan(this.data._id, this.form.value)\n\n  }\n\n}\n","<h1 mat-header>Subscription</h1>\n<div *ngIf=\"form.disabled\">\n  <button mat-icon-button (click)=\"form.enable()\">\n    <mat-icon>edit</mat-icon>\n  </button>\n</div>\n<div>\n\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n    <div>\n      <div>\n        <mat-form-field appearance=\"outline\" style=\"width: 45%; margin-right: 10%\">\n          <mat-label>Name</mat-label>\n          <input matInput formControlName=\"name\" type=\"text\" />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" style=\"width: 45%\">\n          <mat-label>Select Plan</mat-label>\n          <mat-select formControlName=\"for\">\n            <mat-option *ngFor=\"let item of ['Free', 'Basic', 'Premium']\" [value]=\"item\">{{ item }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div>\n        <mat-form-field appearance=\"outline\" style=\"width: 45%; margin-right: 10%\">\n          <mat-label>Monthly Payments</mat-label>\n          <input matInput formControlName=\"amount_per_month\" type=\"text\" />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" style=\"width: 45%\">\n          <mat-label>Annual Payments</mat-label>\n          <input matInput formControlName=\"amount_per_year\" type=\"text\" />\n        </mat-form-field>\n      </div>\n    </div>\n\n    <!-- features start here -->\n    <div formGroupName=\"features\">\n      <div>\n        <div formGroupName=\"patients\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Patients</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>count</mat-label>\n              <input formControlName=\"count\" matInput type=\"number\" />\n            </mat-form-field>\n            <mat-checkbox formControlName=\"unlimited\">Unlimited</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"doctors\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Doctors</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>count</mat-label>\n              <input formControlName=\"count\" matInput type=\"number\" />\n            </mat-form-field>\n            <mat-checkbox formControlName=\"unlimited\">Unlimited</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"admins\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Admins</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>count</mat-label>\n              <input formControlName=\"count\" matInput type=\"number\" />\n            </mat-form-field>\n            <mat-checkbox formControlName=\"unlimited\">Unlimited</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"files\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Files</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>count</mat-label>\n              <input formControlName=\"count\" matInput type=\"number\" />\n            </mat-form-field>\n            <mat-checkbox formControlName=\"unlimited\">Unlimited</mat-checkbox>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div formGroupName=\"notes\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Notes</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"payments\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Payments</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"schedules\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Schedules</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n\n        <div formGroupName=\"reminders\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Reminders</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n        <div formGroupName=\"analytics\" class=\"feature\">\n          <div class=\"feature-name\">\n            <h3>Analytics</h3>\n          </div>\n          <div class=\"feature-details\">\n            <mat-checkbox formControlName=\"available\">Available</mat-checkbox>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"form.enabled\">\n      <button mat-stroked-button [disabled]=\"form.invalid\">Save</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SubscriptionPlanService } from 'src/app/services/subscription-plan.service';\nimport { AddSubscriptionComponent } from './components/add-subscription/add-subscription.component';\nimport { ViewSubscriptionComponent } from './components/view-subscription/view-subscription.component';\n\n@Component({\n  selector: 'app-subscriptions',\n  templateUrl: './subscriptions.component.html',\n  styleUrls: ['./subscriptions.component.scss'],\n})\nexport class SubscriptionsComponent implements OnInit {\n  dataSource;\n  displayedColumns = ['name', 'for', 'actions'];\n  constructor(\n    private dialog: MatDialog,\n    private plan: SubscriptionPlanService\n  ) {\n    plan.subscription_plans$.subscribe((plans) => {\n      this.dataSource = new MatTableDataSource(plans);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addSubscription() {\n    this.dialog.open(AddSubscriptionComponent, {\n      width: '80%',\n      height: '90%',\n    });\n  }\n\n  viewPlan(plan) {\n    this.dialog.open(ViewSubscriptionComponent, {\n      width: '80%',\n      height: '90%',\n      data: plan,\n    });\n  }\n  deletePlan(id) {\n    this.plan.deletePlan(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Search Subscriptions\"\n      #input\n    />\n  </mat-form-field>\n  <button mat-stroked-button (click)=\"addSubscription()\">\n    <mat-icon>add</mat-icon> subscription\n  </button>\n</div>\n\n<mat-table [dataSource]=\"dataSource\">\n  <!-- a-md-data-table-column -->\n  <!-- press ctrl + space to add more column snippet or delete this line -->\n  <ng-container matColumnDef=\"name\">\n    <mat-header-cell *matHeaderCellDef> Name</mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{ element.name }} </mat-cell>\n  </ng-container>\n\n  <!-- a-md-data-table-column -->\n  <!-- press ctrl + space to add more column snippet or delete this line -->\n  <ng-container matColumnDef=\"for\">\n    <mat-header-cell *matHeaderCellDef> For </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{ element.for }} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\n    <mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button (click)=\"viewPlan(element)\">\n        <mat-icon>visibility</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"deletePlan(element._id)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n    </mat-cell>\n  </ng-container>\n\n  a-md-data-table-column\n  <!-- press ctrl + space to add more column snippet or delete this line -->\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n</mat-table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group mat-align-tabs=\"start\">\n    <mat-tab label=\"Medical-aid\">\n        <app-medical-aid></app-medical-aid>\n    </mat-tab>\n    <mat-tab label=\"Procedures\">\n        <app-procedures></app-procedures>\n    </mat-tab>\n    <mat-tab label=\"Specialisations\">\n        <app-specialisations></app-specialisations>\n    </mat-tab>\n    <mat-tab label=\"Subscriptions\">\n        <app-subscriptions></app-subscriptions>\n    </mat-tab>\n    <mat-tab label=\"Hospitals\">\n        <app-hospitals></app-hospitals>\n    </mat-tab>\n  </mat-tab-group>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tickets',\n  templateUrl: './tickets.component.html',\n  styleUrls: ['./tickets.component.scss']\n})\nexport class TicketsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tickets works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss'],\n})\nexport class AddUserComponent implements OnInit {\n  form: FormGroup;\n  constructor(private fb: FormBuilder, private userService: UsersService) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      first_name: ['', [Validators.required]],\n      last_name: ['', [Validators.required]],\n      middle_initial: [''],\n      gender:['',[Validators.required]],\n      email: ['', [Validators.required,Validators.email]],\n      user_type: ['', [Validators.required]],\n      department: ['', [Validators.required]],\n      password: ['africanunicorn@86', [Validators.required]],\n    });\n  }\n  onSubmit() {\n    this.userService.addUser(this.form.value);\n  }\n}\n","<h1 mat-header>Add User</h1>\n<mat-dialog-content>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>First Name</mat-label>\n        <input matInput formControlName=\"first_name\" />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Middle Initial</mat-label>\n        <input matInput formControlName=\"middle_initial\" />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Last Name</mat-label>\n        <input matInput formControlName=\"last_name\" />\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Gender</mat-label>\n        <mat-select formControlName=\"gender\">\n          <mat-option value=\"female\">Female</mat-option>\n          <mat-option value=\"male\">Male</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input matInput formControlName=\"email\" />\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>User Type</mat-label>\n        <input matInput formControlName=\"user_type\" />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Department</mat-label>\n        <input matInput formControlName=\"department\" />\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Default Password</mat-label>\n        <input matInput formControlName=\"password\" />\n      </mat-form-field>\n    </div>\n\n    <mat-dialog-actions>\n      <button mat-stroked-button [disabled]=\"form.invalid\" type=\"submit\">\n        Save\n      </button>\n    </mat-dialog-actions>\n  </form>\n</mat-dialog-content>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Admin } from 'src/app/models/admin.model';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.scss']\n})\nexport class ViewUserComponent implements OnInit {\n\n  form: FormGroup;\n  constructor(private fb: FormBuilder, private userService: UsersService,@Inject(MAT_DIALOG_DATA) public data:Admin) {\n  }\n\n  ngOnInit(): void {\n    console.log(this.data)\n\n    this.form = this.fb.group({\n      first_name: [this.data.first_name, [Validators.required]],\n      last_name: [this.data.last_name, [Validators.required]],\n      middle_initial: [this.data.middle_initial],\n      gender:[this.data.gender,[Validators.required]],\n      user_type: [this.data.user_type, [Validators.required]],\n      department: [this.data.department, [Validators.required]],\n    });\n    this.form.disable()\n \n\n\n  \n  }\n  onSubmit() {\n    this.userService.updateAdmin(this.data._id,this.form.value);\n  }\n}\n","<div mat-header>\n  <h1>\n    User <mat-icon *ngIf=\"form.disabled\" (click)=\"form.enable()\">edit</mat-icon>\n  </h1>\n  <p>({{ data.email }})</p>\n</div>\n<mat-dialog-content>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>First Name</mat-label>\n        <input matInput formControlName=\"first_name\" />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Middle Initial</mat-label>\n        <input matInput formControlName=\"middle_initial\" />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Last Name</mat-label>\n        <input matInput formControlName=\"last_name\" />\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Gender</mat-label>\n        <mat-select formControlName=\"gender\">\n          <mat-option value=\"female\">Female</mat-option>\n          <mat-option value=\"male\">Male</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>User Type</mat-label>\n        <input matInput formControlName=\"user_type\" />\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Department</mat-label>\n        <input matInput formControlName=\"department\" />\n      </mat-form-field>\n    </div>\n\n    <mat-dialog-actions *ngIf=\"form.enabled\">\n      <button mat-stroked-button [disabled]=\"form.invalid\" type=\"submit\">\n        Save\n      </button>\n    </mat-dialog-actions>\n  </form>\n</mat-dialog-content>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { UsersService } from './../../../services/users.service';\nimport { AddUserComponent } from './components/add-user/add-user.component';\nimport { ViewUserComponent } from './components/view-user/view-user.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements OnInit {\n  dataSource;\n  displayedColumns = [\n    'first_name',\n    'last_name',\n    'email',\n    'user_type',\n    'department',\n    'actions',\n  ];\n  constructor(private dialog: MatDialog, private usersService: UsersService) {\n    usersService.admins$.subscribe(\n      (admins) => (this.dataSource = new MatTableDataSource(admins))\n    );\n  }\n  ngOnInit(): void {}\n\n  addUser() {\n    this.dialog.open(AddUserComponent, {\n      width: '30%',\n    });\n  }\n\n  deleteUser(id: string) {\n    let res = confirm('Are you sure you want to delete a user');\n    if (res) this.usersService.deleteUser(id);\n  }\n  viewUser(user) {\n    this.dialog.open(ViewUserComponent, {\n      width: '30%',\n      data: user,\n    });\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Search User\"\n      #input\n    />\n  </mat-form-field>\n  <button mat-stroked-button (click)=\"addUser()\">\n    <mat-icon>add</mat-icon>\n    User\n  </button>\n\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"first_name\">\n      <mat-header-cell *matHeaderCellDef> First Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.first_name }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"middle_initial\">\n      <mat-header-cell *matHeaderCellDef> Middle Initial</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        {{ element.middle_initial }}\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"last_name\">\n      <mat-header-cell *matHeaderCellDef> Last Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.last_name }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell *matHeaderCellDef> Email</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.email }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"user_type\">\n      <mat-header-cell *matHeaderCellDef> User Type</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.user_type }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"department\">\n      <mat-header-cell *matHeaderCellDef> Department</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.department }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button mat-icon-button (click)=\"viewUser(element)\">\n          <mat-icon> visibility </mat-icon>\n        </button>\n\n        <button mat-icon-button (click)=\"deleteUser(element._id)\">\n          <mat-icon> delete </mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n</div>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent {\n  user\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n  time: string;\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService:AuthService) {\n    this.user = authService.SessionUser\n\n    setInterval(()=>{\n      this.time = new Date().toTimeString().substr(0,8)  \n    },1000)\n  }\n\n  signOut(){\n    this.authService.signOut()\n  }\n\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>{{ time }}</mat-toolbar>\n    <mat-nav-list>\n      <div class=\"logo\">\n        <img src=\"./../../assets/images/logo.png\" alt=\"\" />\n      </div>\n\n      <a mat-list-item [routerLink]=\"['/layout/dashboard']\" routerLinkActive=\"router-link-active\">\n        <mat-icon>space_dashboard</mat-icon> &nbsp; &nbsp; Dashboard\n      </a>\n      <a mat-list-item [routerLink]=\"['/layout/doctors']\" routerLinkActive=\"router-link-active\">\n        <mat-icon>people</mat-icon> &nbsp; &nbsp; Doctors\n      </a>\n      <a mat-list-item [routerLink]=\"['/layout/institutions']\" routerLinkActive=\"router-link-active\">\n        <mat-icon>health_and_safety</mat-icon> &nbsp; &nbsp; Institutions\n      </a>\n      <a mat-list-item [routerLink]=\"['/layout/payments']\" routerLinkActive=\"router-link-active\">\n        <mat-icon>money</mat-icon> &nbsp; &nbsp; Payments\n      </a>\n      <a mat-list-item [routerLink]=\"['/layout/settings']\" routerLinkActive=\"router-link-active\">\n        <mat-icon>settings</mat-icon> &nbsp; &nbsp; Settings\n      </a>\n      <a mat-list-item [routerLink]=\"['/layout/tickets']\" routerLinkActive=\"router-link-active\">\n        <mat-icon>support_agent</mat-icon> &nbsp; &nbsp; Tickets\n      </a>\n      <a mat-list-item [routerLink]=\"['/layout/users']\" routerLinkActive=\"router-link-active\">\n        <mat-icon>people</mat-icon> &nbsp; &nbsp; Users\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar>\n      <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n        <mat-icon>announcement</mat-icon>\n      </button>\n\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>person</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>{{ user?.first_name }}</button>\n        <button mat-menu-item (click)=\"signOut()\">Sign Out</button>\n      </mat-menu>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient, private notificationService:NotificationService, private router:Router) {}\n  signIn(value: any) {\n    this.http.post(environment.api_url + 'admins/signin', value).subscribe(\n      ({accessToken,user}:any) => {\n\n        localStorage.setItem('user',JSON.stringify(user))\n        localStorage.setItem('token',JSON.stringify(accessToken))\n        this.notificationService.successNotification(\"Welcome !!!\")\n        this.router.navigateByUrl('/layout')\n      },\n      ({error}) => {\n        this.notificationService.errorNotification(error.message)\n      }\n    );\n  }\n\n  signOut(){\n    localStorage.clear()\n    this.router.navigateByUrl('')\n  }\n\n  get SessionUser(){\n    return JSON.parse(localStorage.getItem('user'))\n  }\n  get Token(){\n    return JSON.parse(localStorage.getItem('token'))\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DoctorsService {\n  users$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private notificationService: NotificationService,\n    private authService: AuthService\n  ) {\n    this.getUsers();\n  }\n  getUsers(){\n    this.http.get(environment.api_url + 'v1/users').subscribe((users)=>{\n      this.users$.next(users)\n    },\n    ({error})=>{\n      this.notificationService.errorNotification(error.message)\n    })\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\nimport { NotificationService } from './notification.service';\nimport { Hospital } from './../models/hospital.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HospitalService {\n  hospitals$ = new BehaviorSubject(null)\n  constructor(private http:HttpClient, private notificationService:NotificationService,private dialog:MatDialog, private authService:AuthService) { this.getHospitals() }\n  async addHospital(value:Hospital){\n    const {_id,first_name,last_name} = this.authService.SessionUser\n\n    \n    value.timestamp = +new Date() \n    value.admin_id = _id;\n    value.saved_by=first_name +' '+ last_name;\n\n\n    this.http.post(environment.api_url+'hospitals',value).subscribe(()=>{\n      this.getHospitals()\n      this.dialog.closeAll()\n      this.notificationService.successNotification('hospital added')\n\n    },({error})=>{\n      this.notificationService.errorNotification(error.message)\n    })\n\n  }\n  getHospitals(){\n    this.http.get(environment.api_url+'hospitals').subscribe((hospitals)=>{this.hospitals$.next(hospitals)})\n  }\n  updateHospital(id:string, value:any){\n    this.http.put(environment.api_url+'hospitals/'+id,value).subscribe(()=>{\n      this.getHospitals()\n      this.dialog.closeAll()\n      this.notificationService.successNotification('hospital updated')\n\n    },({error})=>{\n      this.notificationService.errorNotification(error.message)\n    })\n  }\n  deleteHospital(id:string){\n    this.http.delete(environment.api_url+'hospitals/'+id).subscribe(()=>{\n      this.getHospitals()\n      this.notificationService.successNotification('hospital deleted')\n\n    },({error})=>{\n      this.notificationService.errorNotification(error.message)\n    })\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InstitutionsService {\n  institutions$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private notificationservice: NotificationService,\n    private dialog: MatDialog,\n    private authService: AuthService\n  ) {\n    this.getInstitutions();\n  }\n  getInstitutions() {\n    this.http.get(environment.api_url + 'Institutions').subscribe(\n      (institutions) => {\n        this.institutions$.next(institutions);\n      },\n      ({ error }) => {\n        this.notificationservice.errorNotification(error.message);\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MedicalAidService {\n  medical_aids$ = new BehaviorSubject(null);\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private notificationService: NotificationService,\n    private authService:AuthService\n  ) {\n    this.getMedicalAid();\n  }\n  addMedicalAid({ medical_aid_name, status }) {\n\n    const {_id,first_name,last_name} = this.authService.SessionUser\n    let md = {\n      admin_id: _id,\n      medical_aid_name: medical_aid_name,\n      status: status,\n      sort_index: 0,\n      saved_by:first_name +' '+ last_name,\n      created_timestamp: +new Date(),\n      modified_records: [],\n      original_record: {},\n      delete: false,\n    };\n    this.http.post(environment.api_url + 'medicalAids', md).subscribe(\n      (medical_aid) => {\n        this.dialog.closeAll();\n        this.notificationService.successNotification('medical aid Added');\n        this.getMedicalAid();\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n        console.log(error);\n      }\n    );\n  }\n  getMedicalAid() {\n    this.http.get(environment.api_url + 'medicalAids').subscribe(\n      (medical_aids) => {\n        this.medical_aids$.next(medical_aids);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  updateMedicalAid(id, value) {\n    this.http.put(environment.api_url + 'medicalAids/'+id, value).subscribe(\n      (medical_aid) => {\n        this.dialog.closeAll();\n        this.notificationService.successNotification('medical aid Updated');\n        this.getMedicalAid();\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n        console.log(error);\n      }\n    );\n  }\n  deleteMedicalAid(id) {\n    this.http.delete(environment.api_url + 'medicalAids/'+id).subscribe(\n      (medical_aid) => {\n        this.dialog.closeAll();\n        this.notificationService.successNotification('medical aid deleted');\n        this.getMedicalAid();\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n        console.log(error);\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private snackBar:MatSnackBar) { }\n  successNotification(message:string){\n    this.snackBar.open(message,\"dismiss\",{\n      duration:5000,\n      horizontalPosition:'right',\n      verticalPosition:'top',\n      panelClass:'success-snack'\n    })\n  }\n  errorNotification(message:string){\n    this.snackBar.open(message,\"dismiss\",{\n      duration:5000,\n      horizontalPosition:'right',\n      verticalPosition:'top',\n      panelClass:'error-snack'\n    })\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject, from } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Procedure } from './../models/procedure.model';\nimport { AuthService } from './auth.service';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProcedureService {\n  procedures$ = new BehaviorSubject(null);\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private dialog: MatDialog,\n    private notificationService: NotificationService\n  ) {\n    this.getProcedures();\n  }\n  addProcedure(value: any) {\n    const { _id, first_name, last_name } = this.authService.SessionUser;\n    let procedure: Procedure = {\n      admin_id: _id,\n      ...value,\n      saved_by: first_name + ' ' + last_name,\n      timestamp: +new Date(),\n      delete: false,\n    };\n    this.http.post(environment.api_url + 'procedures', procedure).subscribe(\n      (res) => {\n        this.notificationService.successNotification('Procedure Saved');\n        this.getProcedures();\n        this.dialog.closeAll();\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n  getProcedures() {\n    this.http.get(environment.api_url + 'procedures').subscribe(\n      (res) => {\n        this.procedures$.next(res);\n      },\n      ({ error }) => {}\n    );\n  }\n\n  updateProcedure(id,value) {\n    this.http.put(environment.api_url + 'procedures/' + id,value).subscribe(\n      (res) => {\n        this.notificationService.successNotification('Procedure updated');\n        this.getProcedures();\n        this.dialog.closeAll();\n\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n  deleteProcedure(id: any) {\n    this.http.delete(environment.api_url + 'procedures/' + id).subscribe(\n      (res) => {\n        this.notificationService.successNotification('Procedure deleted');\n        this.getProcedures();\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Specialisation } from '../models/specialisation.model';\nimport { AuthService } from './auth.service';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpecialisationService {\n  specialisations$ = new BehaviorSubject(null);\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private notificationService: NotificationService,\n    private authService: AuthService\n  ) {\n    this.getSpecialisations()\n  }\n  addSpecialisation(value: any) {\n\n    const { _id, first_name, last_name } = this.authService.SessionUser\n    let specialisation: Specialisation = {\n      admin_id: _id,\n      ...value,\n      status: \"active\",\n      saved_by: first_name + ' ' + last_name,\n      timestamp: +new Date(),\n      delete: false\n    }\n\n    this.http.post(environment.api_url + 'specialisations', specialisation).subscribe(\n      (res) => {\n        this.dialog.closeAll();\n        this.notificationService.successNotification('Specialisation added');\n        this.getSpecialisations();\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n  getSpecialisations() {\n    this.http.get(environment.api_url + 'specialisations').subscribe(\n      (res) => {\n        this.specialisations$.next(res);\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n  updateSpecialisation(id, value) {\n    this.http\n      .put(environment.api_url + 'specialisations/' + id, value)\n      .subscribe(\n        (res) => {\n          this.dialog.closeAll();\n          this.notificationService.successNotification(\n            'Specialisation updated'\n          );\n          this.getSpecialisations();\n        },\n        ({ error }) => {\n          this.notificationService.errorNotification(error.message);\n        }\n      );\n  }\n  deleteSpecialisation(id) {\n    this.http.delete(environment.api_url + 'specialisations/' + id).subscribe(\n      (res) => {\n        this.dialog.closeAll();\n        this.notificationService.successNotification('Specialisation deleted');\n        this.getSpecialisations();\n      },\n      ({ error }) => {\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport {NotificationService} from './notification.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubscriptionPlanService {\n  subscription_plans$ = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private notificationService:NotificationService) {\n    this.getPlans();\n  }\n\n  getPlans() {\n    this.http.get(environment.api_url + 'plans').subscribe(\n      (plans) => {\n        this.subscription_plans$.next(plans);\n\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  addPlan(plan: any) {\n    this.http\n      .post(environment.api_url + 'plans', { ...plan, timestamp: +new Date() })\n      .subscribe(\n        (plan) => {\n          this.dialog.closeAll();\n          this.notificationService.successNotification(\"Plan Added\")\n          this.getPlans();\n          \n        },\n        ({error}) => {\n          this.notificationService.errorNotification(error.message)\n          console.log(error);\n        }\n      );\n  }\n  deletePlan(id) {\n    this.http\n    .delete(environment.api_url + `plans/${id}`)\n    .subscribe(\n      (plan) => {\n        this.dialog.closeAll();\n        this.notificationService.successNotification(\"Plan Deleted\")\n        this.getPlans();\n      },\n      ({error}) => {\n        this.notificationService.errorNotification(error.message)\n        console.log(error);\n      }\n    );\n  }\n  updatePlan(id, plan) {\n  \n    this.http\n      .put(environment.api_url + `plans/${id}`, {\n        ...plan,\n        timestamp: +new Date(),\n      })\n      .subscribe(\n        (plan) => {\n          this.dialog.closeAll();\n          this.notificationService.successNotification(\"Plan Updated\")\n          this.getPlans();\n        },\n        ({error}) => {\n          this.notificationService.errorNotification(error.message)\n          console.log(error);\n        }\n      );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\nimport { Admin } from './../models/admin.model';\nimport { NotificationService } from './notification.service';\nimport { MatDialog } from '@angular/material/dialog';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n\n\n  admins$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private notificationService: NotificationService,\n    private dialog: MatDialog\n  ) {\n    this.getAdmins();\n  }\n  getAdmins() {\n    this.http.get(environment.api_url + 'admins').subscribe(\n      (admins: any) => {\n        let admns = admins.filter((admin) => {\n          return admin._id !== this.authService.SessionUser._id;\n        });\n        this.admins$.next(admns);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  addUser(value: Admin) {\n    value.timestamp = +new Date();\n    this.http.post(environment.api_url + 'admins', value).subscribe(\n      (users) => {\n        this.getAdmins();\n        this.dialog.closeAll();\n        this.notificationService.successNotification('Admin Added');\n      },\n      (error) => {\n        console.log(error);\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n\n  updateAdmin(id: string, value: any) {\n    this.http.put(environment.api_url + 'admins/'+ id,value).subscribe(\n      (users) => {\n        this.getAdmins();\n        this.dialog.closeAll()\n        this.notificationService.successNotification('Admin Updated');\n      },\n      ({error}) => {\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n\n  deleteUser(id: any) {\n    this.http.delete(environment.api_url + 'admins/'+ id).subscribe(\n      (users) => {\n        this.getAdmins();\n        this.notificationService.successNotification('Admin deleted');\n      },\n      ({error}) => {\n        this.notificationService.errorNotification(error.message);\n      }\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url:'http://localhost:3000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n  "],"sourceRoot":"webpack:///"}